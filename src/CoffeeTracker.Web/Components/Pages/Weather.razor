@page "/weather"
@using CoffeeTracker.Models
@using CoffeeTracker.Web.Clients
@inject IWeatherClient WeatherClient

<h1>Weather Forecast</h1>

<p>This component demonstrates fetching data from the API with authentication.</p>

@if (_forecasts == null)
{
    <p><em>Loading...</em></p>
}
else if (_errorMessage != null)
{
    <div class="alert alert-danger">
        <p>Error: @_errorMessage</p>
    </div>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in _forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[]? _forecasts;
    private string? _errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _forecasts = await WeatherClient.GetForecastAsync();
            
            if (_forecasts == null || _forecasts.Length == 0)
            {
                _errorMessage = "No forecast data was received.";
            }
        }
        catch (Exception ex)
        {
            _errorMessage = $"Error loading forecast data: {ex.Message}";
        }
    }
}
